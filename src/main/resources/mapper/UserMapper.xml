<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.UserMapper">

    <!--开启二级缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <!-- 定义结果映射 -->
    <resultMap id="userResultMap" type="User">
        <id column="id" property="id"/>
        <result property="userName" column="username"/>
        <result property="password" column="password"/>
        <result property="time" column="time"/>
    </resultMap>

    <!-- SELECT 查询 -->
    <select id="selectUserById" resultType="User">
        SELECT id, userName, password, time
        FROM `user`
        WHERE id = #{id}
    </select>

    <!-- INSERT 查询 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="User">
        INSERT INTO `user` (userName, password)
        VALUES (#{userName}, #{password})
    </insert>

    <select id="selectToMap" resultType="map">
        select * from `user`
    </select>


    <!--动态sql-->

    <sql id="userColumns">
        `id`,`username`,`password`,`time`
    </sql>

    <select id="selectUserByManyCondition" resultType="User">
        select * from `user`
        <where>
            <if test="userName != null and userName != ''">
                username = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>

    </select>


    <select id="selectUserByChoose" resultType="User">
        select
        <include refid="userColumns"/>
        from `user`
        <where>
            <choose>
                <when test="userName != null and userName != ''">
                    username = #{userName}
                </when>
                <when test="password != null and password != ''">
                    password = #{password}
                </when>
                <otherwise>
                    id = 2
                </otherwise>
            </choose>
        </where>
    </select>

    <delete id="deleteById">
        delete from `user`
        <where>
            id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </where>
    </delete>


</mapper>
